Importing Package 		-->		 import java.util.Scanner;
Multiline comment 		-->		 /*
Public 
Class
Quicksort
*/

Access Specifiers 		-->		 public
Keyword 		-->		 class
Identifier 		-->		 Quicksort
Spl character 		-->		 {

Access Specifiers 		-->		 public
Keyword 		-->		 static
Keyword 		-->		 void
function defn 		-->		 sort(int[] arr, int low, int high) {
Keyword 		-->		 if
Spl character 		-->		 (
Identifier 		-->		 low
Relational operator 	-->		 <
Identifier 		-->		 high
Spl character 		-->		 )
Spl character 		-->		 {

Keyword 		-->		 int
Identifier 		-->		 pivot
assignment operator 	-->		 =
Identifier 		-->		 partition
Spl character 		-->		 (
Identifier 		-->		 arr
Spl character 		-->		 ,
Identifier 		-->		 low
Spl character 		-->		 ,
Identifier 		-->		 high
Spl character 		-->		 )
Spl character 		-->		 ;

Identifier 		-->		 sort
Spl character 		-->		 (
Identifier 		-->		 arr
Spl character 		-->		 ,
Identifier 		-->		 low
Spl character 		-->		 ,
Identifier 		-->		 pivot
Arithmetic operator 	-->		 -
Number 			-->		 1
Spl character 		-->		 )
Spl character 		-->		 ;

Identifier 		-->		 sort
Spl character 		-->		 (
Identifier 		-->		 arr
Spl character 		-->		 ,
Identifier 		-->		 pivot
Arithmetic operator 	-->		 +
Number 			-->		 1
Spl character 		-->		 ,
Identifier 		-->		 high
Spl character 		-->		 )
Spl character 		-->		 ;

Spl character 		-->		 }

Spl character 		-->		 }


Access Specifiers 		-->		 private
Keyword 		-->		 static
Keyword 		-->		 int
function defn 		-->		 partition(int[] arr, int low, int high) {
Keyword 		-->		 int
Identifier 		-->		 pivot
assignment operator 	-->		 =
Identifier 		-->		 arr[high]
Spl character 		-->		 ;

Keyword 		-->		 int
Identifier 		-->		 i
assignment operator 	-->		 =
Identifier 		-->		 low
Arithmetic operator 	-->		 -
Number 			-->		 1
Spl character 		-->		 ;

Keyword 		-->		 for
Spl character 		-->		 (
Keyword 		-->		 int
Identifier 		-->		 j
assignment operator 	-->		 =
Identifier 		-->		 low
Spl character 		-->		 ;
Identifier 		-->		 j
Relational operator 	-->		 <
Identifier 		-->		 high
Spl character 		-->		 ;
Identifier 		-->		 j
Arithmetic operator 	-->		 +
Arithmetic operator 	-->		 +
Spl character 		-->		 )
Spl character 		-->		 {

Keyword 		-->		 if
Spl character 		-->		 (
Identifier 		-->		 arr[j]
Relational operator 	-->		 <
Identifier 		-->		 pivot
Spl character 		-->		 )
Spl character 		-->		 {

Identifier 		-->		 i
Arithmetic operator 	-->		 +
Arithmetic operator 	-->		 +
Spl character 		-->		 ;

Keyword 		-->		 int
Identifier 		-->		 temp
assignment operator 	-->		 =
Identifier 		-->		 arr[i]
Spl character 		-->		 ;

Identifier 		-->		 arr[i] = arr[j]
Spl character 		-->		 ;

Identifier 		-->		 arr[j]
assignment operator 	-->		 =
Identifier 		-->		 temp
Spl character 		-->		 ;

Spl character 		-->		 }

Spl character 		-->		 }

Keyword 		-->		 int
Identifier 		-->		 temp
assignment operator 	-->		 =
Identifier 		-->		 arr[i + 1]
Spl character 		-->		 ;

Identifier 		-->		 arr[i + 1] = arr[high]
Spl character 		-->		 ;

Identifier 		-->		 arr[high]
assignment operator 	-->		 =
Identifier 		-->		 temp
Spl character 		-->		 ;

Keyword 		-->		 return
Identifier 		-->		 i
Arithmetic operator 	-->		 +
Number 			-->		 1
Spl character 		-->		 ;

Spl character 		-->		 }

Singleline Comment 		-->		 //main
Access Specifiers 		-->		 public
Keyword 		-->		 static
Keyword 		-->		 void
function defn 		-->		 main(String[] args) {

Keyword 		-->		 int
Identifier 		-->		 n
Spl character 		-->		 ;

Identifier 		-->		 Scanner
Identifier 		-->		 sc
assignment operator 	-->		 =
Keyword 		-->		 new
Identifier 		-->		 Scanner
Spl character 		-->		 (
Keyword 		-->		 System
Attribute call 		-->		 .in
Spl character 		-->		 )
Spl character 		-->		 ;

function call 		-->		 System.out.print("Enter the number of elements you want to store: ");

Identifier 		-->		 n
assignment operator 	-->		 =
Identifier 		-->		 sc
Attribute function call -->		 .nextInt()
Spl character 		-->		 ;


Identifier 		-->		 int[] array = new int[n]
Spl character 		-->		 ;

function call 		-->		 System.out.println("Enter the elements of the array: ");
Keyword 		-->		 for
Spl character 		-->		 (
Keyword 		-->		 int
Identifier 		-->		 i
assignment operator 	-->		 =
Number 			-->		 0
Spl character 		-->		 ;
Identifier 		-->		 i
Relational operator 	-->		 <
Identifier 		-->		 n
Spl character 		-->		 ;
Identifier 		-->		 i
Arithmetic operator 	-->		 +
Arithmetic operator 	-->		 +
Spl character 		-->		 )
Spl character 		-->		 {


Identifier 		-->		 array[i]
assignment operator 	-->		 =
Identifier 		-->		 sc
Attribute function call -->		 .nextInt()
Spl character 		-->		 ;

Spl character 		-->		 }


Identifier 		-->		 sort
Spl character 		-->		 (
Identifier 		-->		 array
Spl character 		-->		 ,
Number 			-->		 0
Spl character 		-->		 ,
Identifier 		-->		 array
Attribute call 		-->		 .length
Arithmetic operator 	-->		 -
Number 			-->		 1
Spl character 		-->		 )
Spl character 		-->		 ;

function call 		-->		 System.out.print("sorted: ");

Keyword 		-->		 for
Spl character 		-->		 (
Keyword 		-->		 int
Identifier 		-->		 i
:Identifier 		-->		 array
Spl character 		-->		 )
Spl character 		-->		 {

function call 		-->		 System.out.print(i + " ");
Spl character 		-->		 }

Spl character 		-->		 }

Spl character 		-->		 }

